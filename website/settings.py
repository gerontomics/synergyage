"""
Django settings for website project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
# For Heroku database
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%+bclrlcrjk+l9%m6hk&-9)k+(=4!ad04#$n+(dn@!&if6=$fs'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['synergistic.herokuapp.com', '127.0.0.1', 'synergistic.aging-research.group']

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240

# Application definition

INSTALLED_APPS = [
    'curation.apps.CurationConfig',
    'suit',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles'
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'website.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {}
DATABASES['default'] = dj_database_url.config(default=os.environ['DATABASE_URL'])


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Bucharest'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')
STATIC_URL = '/static/'


# Simplified static file serving.
# https://warehouse.python.org/project/whitenoise/

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# Captcha configuration

# GOOGLE_RECAPTCHA_SECRET_KEY = '6LfiGTIUAAAAAH4Kj4i50BS6qD5RCLqqI85jIm1y'
GOOGLE_RECAPTCHA_SECRET_KEY = os.environ.get('RECAPTCHA_SECRET_KEY', None)

# Django Suit configuration
SUIT_CONFIG = {
    # menu
    'MENU': (
        '-',
        {
            'label': 'Public website',
            'icon': 'icon-home',
            'url': '/'
        },
        '-',
        {
            'app': 'curation',
            'label': 'Curation',
            'icon': 'icon-user',
            'models': (
                {
                    'model': 'article'
                },
                {
                    'model': 'curationdata'
                }
            )
        },
        '-',
        {
            'app': 'curation',
            'label': 'Database',
            'icon': 'icon-edit',
            'models': (
                {
                    'label': 'Lags',
                    'model': 'lags'
                },
                {
                    'label': 'Mutants',
                    'model': 'mutant'
                },
                {
                    'label': 'Interactions',
                    'model': 'ModelInteractions'
                }
            )
        },
        '-',
        {
            'app': 'curation',
            'label': 'Settings',
            'icon':'icon-cog',
            'models': (
                'auth.user',
                'auth.group'
            )
        },
    ),
}
