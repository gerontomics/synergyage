# -*- coding: utf-8 -*-
# Generated by Django 1.11.28 on 2020-05-06 10:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Edges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('small_big', models.TextField()),
            ],
            options={
                'db_table': 'edges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenePositions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('small_big', models.TextField(blank=True, null=True)),
                ('genes', models.TextField(blank=True, null=True)),
                ('x_position', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gene_positions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KeggCel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path_id', models.TextField(blank=True, null=True)),
                ('path_name', models.TextField(blank=True, null=True)),
                ('tax_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kegg_cel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KeggMappingCel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path_id', models.TextField(blank=True, null=True)),
                ('entrez_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kegg_mapping_cel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lags',
            fields=[
                ('entrez_id', models.IntegerField(primary_key=True, serialize=False)),
                ('tax_id', models.IntegerField()),
                ('symbol', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('wbid', models.TextField(blank=True, null=True)),
                ('fbid', models.TextField(blank=True, null=True)),
                ('mgiid', models.TextField(blank=True, null=True)),
                ('locus', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('wbdescription', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TissueExpression',
            fields=[
                ('entrez_id', models.IntegerField(primary_key=True, serialize=False)),
                ('tissue', models.TextField()),
                ('our_name', models.TextField()),
            ],
            options={
                'db_table': 'tissue_expression',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Approve',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('pmid', models.IntegerField()),
                ('observation', models.TextField(help_text='Relevant comment for the article')),
                ('model_id', models.IntegerField()),
                ('number_mutations', models.IntegerField()),
                ('model_name', models.CharField(help_text='Wild type or mutant', max_length=100)),
                ('temperature', models.FloatField(blank=True, help_text='Â°C', null=True)),
                ('diet', models.CharField(blank=True, max_length=100, null=True)),
                ('lifespan', models.IntegerField(blank=True, help_text='Leave empty if is not available', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CurationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pmid', models.IntegerField()),
                ('observation', models.TextField(help_text='Relevant comment for the article')),
            ],
        ),
        migrations.CreateModel(
            name='ModelInteractions',
            fields=[
                ('id1', models.IntegerField(primary_key=True, serialize=False)),
                ('id2', models.IntegerField()),
                ('comm', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mutant',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('tax_id', models.IntegerField()),
                ('name', models.TextField()),
                ('genes', models.TextField(blank=True, null=True)),
                ('temp', models.TextField(blank=True, null=True)),
                ('lifespan', models.FloatField()),
                ('pmid', models.IntegerField()),
                ('effect', models.FloatField(blank=True, null=True)),
                ('diet', models.TextField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('comparison', models.TextField(blank=True, null=True)),
                ('interaction_type', models.TextField(blank=True, null=True)),
                ('strain', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'models',
            },
        ),
        migrations.CreateModel(
            name='Muutant',
            fields=[
                ('mutant_id', models.AutoField(primary_key=True, serialize=False)),
                ('pmid', models.IntegerField()),
                ('model_name', models.CharField(max_length=255)),
                ('parent', models.CharField(max_length=255)),
                ('entrez_id', models.IntegerField()),
                ('intervention', models.CharField(max_length=255)),
                ('temperature', models.CharField(blank=True, max_length=255, null=True)),
                ('diet', models.CharField(blank=True, max_length=255, null=True)),
                ('lifespan', models.FloatField()),
                ('calorically_restricted', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')])),
                ('composite_id', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='NewArticle',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('pmid', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(max_length=70)),
                ('citation', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('state', models.CharField(choices=[('1', 'Approve'), ('2', 'Reject'), ('3', 'Maybe')], max_length=1, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PubmedData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pmid', models.IntegerField()),
                ('citation', models.CharField(max_length=255)),
                ('abstract', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Nodes',
            fields=[
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='node_page', serialize=False, to='curation.Mutant')),
                ('small_big', models.TextField()),
                ('x_position', models.IntegerField()),
                ('y_position', models.FloatField()),
            ],
            options={
                'db_table': 'nodes',
                'managed': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='modelinteractions',
            unique_together=set([('id1', 'id2')]),
        ),
        migrations.AddField(
            model_name='curationdata',
            name='mutant',
            field=models.ManyToManyField(to='curation.Muutant'),
        ),
    ]
